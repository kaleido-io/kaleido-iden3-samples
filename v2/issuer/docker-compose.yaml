version: '3.9'
services:
  postgres:
    image: postgres:14-alpine
    hostname: postgres
    environment:
      - PGPORT=5432
      - PGUSER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./scripts/sql:/docker-entrypoint-initdb.d:ro
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    command: --port 6380
    ports:
      - '6380:6380'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-p', '6380', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: hashicorp/vault:latest
    volumes:
      - ~/.vault/policies:/vault/policies
      - ~/.vault/data:/vault/data
      - ~/.vault/file:/vault/file:rw
      - ~/.vault/plugins:/vault/plugins
      - ./config:/vault/config
      - ./scripts:/vault/scripts
    ports:
      - 8201:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: /vault/scripts/vault-init.sh

  platform:
    image: sh-id-platform/api:latest
    volumes:
      - ./config/config.toml:/service/config.toml
    ports:
      - '3001:3001'
    depends_on:
      - postgres
      - redis
      - vault
    command: sh -c "sleep 4s && ./migrate && ./platform"

  pending_publisher:
    image: sh-id-platform/api:latest
    volumes:
      - ./config/config.toml:/service/config.toml
    depends_on:
      - postgres
      - vault
    command: sh -c "sleep 4s &&  ./pending_publisher"
volumes:
  postgres_data: {}
  redis_data: {}
